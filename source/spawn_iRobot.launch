<!-- <launch> -->
<!--     <arg name="model" default="$(find irobot)/iRobot/iRobot.urdf"/> -->
<!--     <param name="robot_description" command="$(find xacro)/xacro '$(arg model)'" /> -->
<!--      -->
<!--     <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" output="screen" -->
<!--           args="-param robot_description -urdf -model iRobot" /> -->
<!-- </launch> -->


<!-- <launch> -->
<!--      --><!-- Load URDF model -->
<!--     <arg name="model" default="$(find irobot)/iRobot/iRobot.urdf"/> -->
<!--     <param name="robot_description" command="$(find xacro)/xacro '$(arg model)'" /> -->

<!--      --><!-- Spawn robot in Gazebo -->
<!--     <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" output="screen" -->
<!--           args="-param robot_description -urdf -model iRobot" /> -->

<!--      --><!-- Robot State Publisher (publishes /tf and /joint_states) -->
<!--     <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"> -->
<!--         <param name="use_sim_time" value="true"/> -->
<!--     </node> -->

<!--      --><!-- Joint State Publisher (publishes /joint_states) -->
<!--     <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen"> -->
<!--         <param name="use_sim_time" value="true"/> -->
<!--     </node> -->

<!--      --><!-- Static transform between odom and base_link (if no other TF is provided) -->
<!--     <node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 odom base_link 100" /> -->

<!--     <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" output="screen"> -->
<!--         <remap from="/map" to="/robot_map"/> -->
<!--     </node> -->
<!-- </launch> -->


<launch>
<!--     Load URDF model -->
    <arg name="model" default="$(find irobot)/iRobot/iRobot.urdf"/>
    <arg name="robot_name" default="clean_e2map" />
    <param name="robot_description" command="cat '$(arg model)'" />
<!--     <param name="robot_description" command="$(find xacro)/xacro '$(arg model)'" /> -->
    <param name="use_sim_time" value="true" />

<!--     Spawn robot in Gazebo -->
    <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-param robot_description -urdf -model $(arg robot_name) -robot_namespace /clean_e2map -x 5.5 -y -3.8 -z 0 -Y 0" />


<!--     Robot State Publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
        <param name="use_sim_time" value="true"/>
    </node>

<!--     Joint State Publisher (Optional) -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
        <param name="use_sim_time" value="true"/>
<!--         <param name="use_gui" value="false"/> -->
    </node>

<!--     Static transform: odom -> base_link -->
<!--     <node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" -->
<!--           args="0 0 0 0 0 0 /odom /base_link 10" /> -->


<!--   Add transform between base_link and hokuyo_laser_link -->
<node pkg="tf" type="static_transform_publisher" name="base_link_to_hokuyo_laser_link" args="0 0 0.1 0 0 0 base_link hokuyo_laser_link 10"/>


  <!-- Gmapping SLAM -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <remap from="scan" to="/clean_e2map/laser_scan"/>

    <param name="delta" value="0.05"/> <!-- 맵 해상도: 5cm -->
    <param name="xmin" value="-10.0"/> <!-- 초기 맵 x 좌표 최소값 -->
    <param name="ymin" value="-10.0"/> <!-- 초기 맵 y 좌표 최소값 -->
    <param name="xmax" value="10.0"/>  <!-- 초기 맵 x 좌표 최대값 -->
    <param name="ymax" value="10.0"/>  <!-- 초기 맵 y 좌표 최대값 -->
    <param name="odom_frame" value="/odom"/>
    <param name="base_frame" value="/base_link"/>
    <param name="map_frame" value="/map"/>
  </node>
</launch>
<!--     Diff Drive Controller -->
<!--     <node name="wheel_drive_controller" pkg="controller_manager" type="spawner" output="screen" -->
<!--           args="wheel_drive_controller" /> -->


<!-- <launch> -->
<!--      --><!-- Load URDF model -->
<!--     <arg name="model" default="$(find irobot)/iRobot/iRobot.urdf"/>  --><!-- URDF 경로 업데이트 -->
<!--     <arg name="robot_name" default="xiaomi_gen1" /> -->
<!--     <param name="robot_description" command="$(find xacro)/xacro '$(arg model)'" /> -->
<!--     <param name="use_sim_time" value="true" /> -->

<!--      --><!-- Spawn robot in Gazebo -->
<!--     <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" output="screen" -->
<!--           args="-param robot_description -urdf -model $(arg robot_name) -robot_namespace /xiaomi_gen1 -x 0 -y 0 -z 0.0 -Y 0" /> -->

<!--      --><!-- Robot State Publisher -->
<!--     <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"> -->
<!--         <param name="use_sim_time" value="true"/> -->
<!--     </node> -->

<!--      --><!-- Joint State Publisher (Optional) -->
<!--     <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen"> -->
<!--         <param name="use_sim_time" value="true"/> -->
<!--     </node> -->

<!--      --><!-- Diff Drive Controller -->
<!--     <node name="diff_drive_controller" pkg="gazebo_ros" type="spawn_model" output="screen" -->
<!--           args="-param robot_description -urdf -model $(arg robot_name) -robot_namespace /xiaomi_gen1 -x 0 -y 0 -z 0 -Y 0" /> -->

<!-- </launch> -->
